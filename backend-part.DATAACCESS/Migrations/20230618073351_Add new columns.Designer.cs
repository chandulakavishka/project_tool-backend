// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend_part.SERVICES;

#nullable disable

namespace webapp.DATAACCESS.Migrations
{
    [DbContext(typeof(DbAccess))]
    [Migration("20230618073351_Add new columns")]
    partial class Addnewcolumns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("backend_part.MODELS.Innovative", b =>
                {
                    b.Property<int?>("InnovativeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("InnovativeId"));

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("EvaluatorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InnovativeName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LeadId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InnovativeId");

                    b.ToTable("Innovatives");

                    b.HasData(
                        new
                        {
                            InnovativeId = 1,
                            Description = "ABCD",
                            EvaluatorId = "Kasun",
                            InnovativeName = "A",
                            LeadId = "Saman",
                            StartDate = new DateTime(2023, 6, 18, 13, 3, 51, 475, DateTimeKind.Local).AddTicks(7652)
                        },
                        new
                        {
                            InnovativeId = 2,
                            Description = "PQRS",
                            EvaluatorId = "Supun",
                            InnovativeName = "B",
                            LeadId = "Nimal",
                            StartDate = new DateTime(2023, 6, 18, 13, 3, 51, 475, DateTimeKind.Local).AddTicks(7664)
                        },
                        new
                        {
                            InnovativeId = 3,
                            Description = "XYZ",
                            EvaluatorId = "Saranga",
                            InnovativeName = "C",
                            LeadId = "Amal",
                            StartDate = new DateTime(2023, 6, 18, 13, 3, 51, 475, DateTimeKind.Local).AddTicks(7665)
                        });
                });

            modelBuilder.Entity("backend_part.MODELS.User", b =>
                {
                    b.Property<int?>("UId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("UId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UId = 1,
                            City = "Colombo",
                            Description = "Description1",
                            Email = "Perera@gmail.com",
                            FirstName = "",
                            LastName = "Perera",
                            PhoneNo = "0112435564",
                            Role = 0
                        },
                        new
                        {
                            UId = 2,
                            City = "Galle",
                            Description = "Description2",
                            Email = "Adikari@gmail.com",
                            FirstName = "",
                            LastName = "Adikari",
                            PhoneNo = "0912435564",
                            Role = 2
                        },
                        new
                        {
                            UId = 3,
                            City = "Mathara",
                            Description = "Description3",
                            Email = "Suriyasena@gmail.com",
                            FirstName = "",
                            LastName = "Suriyasena",
                            PhoneNo = "0412085564",
                            Role = 1
                        },
                        new
                        {
                            UId = 4,
                            City = "kurunagala",
                            Description = "Description4",
                            Email = "Jayasekara@gmail.com",
                            FirstName = "",
                            LastName = "Jayasekara",
                            PhoneNo = "0112365564",
                            Role = 0
                        },
                        new
                        {
                            UId = 5,
                            City = "Negambo",
                            Description = "Description5",
                            Email = "Weerawansha@gmail.com",
                            FirstName = "",
                            LastName = "Weerawansha",
                            PhoneNo = "0112785564",
                            Role = 0
                        },
                        new
                        {
                            UId = 6,
                            City = "Kaduwela",
                            Description = "Description6",
                            Email = "Jayawardhana@gmail.com",
                            FirstName = "",
                            LastName = "Jayawardhana",
                            PhoneNo = "0112643564",
                            Role = 3
                        });
                });

            modelBuilder.Entity("backend_part.MODELS.UserTasks", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<int?>("CurrentProgress")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("InnovativeId")
                        .HasColumnType("int");

                    b.Property<string>("TaskName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("TaskId");

                    b.HasIndex("InnovativeId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            TaskId = 1,
                            CurrentProgress = 0,
                            Description = "Description1",
                            InnovativeId = 1,
                            TaskName = "Finalize speaker and topic for the podcast"
                        },
                        new
                        {
                            TaskId = 2,
                            CurrentProgress = 1,
                            Description = "Description3",
                            InnovativeId = 2,
                            TaskName = "Test recording session"
                        },
                        new
                        {
                            TaskId = 3,
                            CurrentProgress = 2,
                            Description = "Description3",
                            InnovativeId = 3,
                            TaskName = "Task3"
                        },
                        new
                        {
                            TaskId = 4,
                            CurrentProgress = 0,
                            Description = "Description4",
                            InnovativeId = 1,
                            TaskName = "Finalize speaker and topic with speaker"
                        },
                        new
                        {
                            TaskId = 5,
                            CurrentProgress = 2,
                            Description = "Description5",
                            InnovativeId = 2,
                            TaskName = "Task5"
                        },
                        new
                        {
                            TaskId = 6,
                            CurrentProgress = 1,
                            Description = "Description6",
                            InnovativeId = 3,
                            TaskName = "Final recording session"
                        },
                        new
                        {
                            TaskId = 7,
                            CurrentProgress = 0,
                            Description = "Description7",
                            InnovativeId = 1,
                            TaskName = "Azure general best practices"
                        },
                        new
                        {
                            TaskId = 8,
                            CurrentProgress = 0,
                            Description = "Description8",
                            InnovativeId = 2,
                            TaskName = "Create new voiceCut"
                        },
                        new
                        {
                            TaskId = 9,
                            CurrentProgress = 0,
                            Description = "Description9",
                            InnovativeId = 3,
                            TaskName = "check previous database"
                        });
                });

            modelBuilder.Entity("backend_part.MODELS.UserTasks", b =>
                {
                    b.HasOne("backend_part.MODELS.Innovative", "Innovative")
                        .WithMany()
                        .HasForeignKey("InnovativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Innovative");
                });
#pragma warning restore 612, 618
        }
    }
}
